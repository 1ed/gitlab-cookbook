# This file was generated by Chef for <%= node['fqdn'] %>
# Do not change this file by hand!

# GITLAB
# Maintainer: @randx
# App Version: 5.2

upstream gitlab {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server unix:<%= node['gitlab']['app_home'] %>/tmp/sockets/gitlab.socket fail_timeout=0;
}

<% if node['gitlab']['use_https'] %>
server {
    listen 80;
    server_name <%= node['gitlab']['host'] %>;
    return 301 https://$host$request_uri;
}
<% end %>

server {
  <% if node['gitlab']['use_https'] %>
  listen 443 ssl;
  <% else %>
  listen 80
  <% end %>

  server_name <%= node['gitlab']['host'] %>;
  root <%= node['gitlab']['app_home'] %>/public;

  <% if node['gitlab']['use_https'] %>
  ssl on;
  ssl_certificate <%= node['gitlab']['ssl_certificate_pem'] %>;
  ssl_certificate_key <%= node['gitlab']['ssl_certificate_key'] %>;
  keepalive_timeout    70;
  ssl_session_cache    shared:SSL:10m;
  ssl_session_timeout  10m;
  <% end %>

  # individual nginx logs for this gitlab vhost
  access_log  /var/log/nginx/gitlab_access.log;
  error_log   /var/log/nginx/gitlab_error.log;

  location / {
    # serve static files from defined root folder;.
    # @gitlab is a named location for the upstream fallback, see below
    try_files $uri $uri/index.html $uri.html @gitlab;
  }

  # if a file, which is not found in the root folder is requested,
  # then the proxy pass the request to the upsteam (gitlab unicorn)
  location @gitlab {
    proxy_read_timeout 300; # https://github.com/gitlabhq/gitlabhq/issues/694
    proxy_connect_timeout 300; # https://github.com/gitlabhq/gitlabhq/issues/694
    proxy_redirect     off;

    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   Host              $http_host;
    proxy_set_header   X-Real-IP         $remote_addr;

    proxy_pass http://gitlab;
  }
}
